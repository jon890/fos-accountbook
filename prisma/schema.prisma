generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// =====================================================
// NextAuth.js 인증 전용 스키마
// =====================================================
// Auth.js Prisma Adapter는 필드명을 그대로 DB 컬럼명으로 사용합니다.
// @map을 사용해도 어댑터가 무시하므로, camelCase 필드명을 유지합니다.
//
// 참조: https://authjs.dev/getting-started/adapters/prisma
// =====================================================

// NextAuth.js 호환 Account 모델
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

// NextAuth.js 호환 Session 모델
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

// NextAuth.js 호환 User 모델
// 백엔드와 공유: uuid, createdAt, updatedAt, deletedAt는 백엔드 JPA가 관리
model User {
  id            String    @id @default(cuid())
  uuid          String    @unique @default(uuid()) // 백엔드 동기화용
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now()) // 백엔드와 공유
  updatedAt     DateTime  @updatedAt // 백엔드와 공유
  deletedAt     DateTime? // 백엔드와 공유 (Soft Delete)
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

// NextAuth.js VerificationToken 모델
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}
